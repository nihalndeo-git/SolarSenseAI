{"ast":null,"code":"var _jsxFileName = \"/home/nihal/Documents/COLLEGE_STUFF/EDAI-IT/SolarSense/green-it-solar-map/client/src/pages/DashboardPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { fetchEnergyData } from '../services/api';\nimport EnergyChart from '../components/charts/EnergyChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DashboardPage = () => {\n  _s();\n  const [chartData, setChartData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const getData = async () => {\n      setLoading(true);\n      // In a real app, you'd pass a user or project ID\n      const data = await fetchEnergyData('project-123');\n      setChartData({\n        labels: data.labels,\n        datasets: [{\n          label: 'Energy Consumption (kWh)',\n          data: data.consumption,\n          borderColor: 'rgb(255, 99, 132)',\n          backgroundColor: 'rgba(255, 99, 132, 0.5)'\n        }, {\n          label: 'Energy Generation (kWh)',\n          data: data.generation,\n          borderColor: 'rgb(53, 162, 235)',\n          backgroundColor: 'rgba(53, 162, 235, 0.5)'\n        }]\n      });\n      setLoading(false);\n    };\n    getData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Energy Management Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading chart data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: '800px'\n      },\n      children: chartData && /*#__PURE__*/_jsxDEV(EnergyChart, {\n        data: chartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(DashboardPage, \"yu6F9SEAxwq5/JesOMjgMRR2m1s=\");\n_c = DashboardPage;\nexport default DashboardPage;\nvar _c;\n$RefreshReg$(_c, \"DashboardPage\");","map":{"version":3,"names":["React","useEffect","useState","fetchEnergyData","EnergyChart","jsxDEV","_jsxDEV","DashboardPage","_s","chartData","setChartData","loading","setLoading","getData","data","labels","datasets","label","consumption","borderColor","backgroundColor","generation","children","fileName","_jsxFileName","lineNumber","columnNumber","style","maxWidth","_c","$RefreshReg$"],"sources":["/home/nihal/Documents/COLLEGE_STUFF/EDAI-IT/SolarSense/green-it-solar-map/client/src/pages/DashboardPage.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { fetchEnergyData } from '../services/api';\nimport EnergyChart from '../components/charts/EnergyChart';\n\nconst DashboardPage = () => {\n  const [chartData, setChartData] = useState<any>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const getData = async () => {\n      setLoading(true);\n      // In a real app, you'd pass a user or project ID\n      const data = await fetchEnergyData('project-123');\n      setChartData({\n        labels: data.labels,\n        datasets: [\n          {\n            label: 'Energy Consumption (kWh)',\n            data: data.consumption,\n            borderColor: 'rgb(255, 99, 132)',\n            backgroundColor: 'rgba(255, 99, 132, 0.5)',\n          },\n          {\n            label: 'Energy Generation (kWh)',\n            data: data.generation,\n            borderColor: 'rgb(53, 162, 235)',\n            backgroundColor: 'rgba(53, 162, 235, 0.5)',\n          },\n        ],\n      });\n      setLoading(false);\n    };\n\n    getData();\n  }, []);\n\n  return (\n    <div>\n      <h2>Energy Management Dashboard</h2>\n      {loading ? (\n        <p>Loading chart data...</p>\n      ) : (\n        <div style={{ maxWidth: '800px' }}>\n          {chartData && <EnergyChart data={chartData} />}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default DashboardPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,eAAe,QAAQ,iBAAiB;AACjD,OAAOC,WAAW,MAAM,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAM,IAAI,CAAC;EACrD,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMY,OAAO,GAAG,MAAAA,CAAA,KAAY;MAC1BD,UAAU,CAAC,IAAI,CAAC;MAChB;MACA,MAAME,IAAI,GAAG,MAAMX,eAAe,CAAC,aAAa,CAAC;MACjDO,YAAY,CAAC;QACXK,MAAM,EAAED,IAAI,CAACC,MAAM;QACnBC,QAAQ,EAAE,CACR;UACEC,KAAK,EAAE,0BAA0B;UACjCH,IAAI,EAAEA,IAAI,CAACI,WAAW;UACtBC,WAAW,EAAE,mBAAmB;UAChCC,eAAe,EAAE;QACnB,CAAC,EACD;UACEH,KAAK,EAAE,yBAAyB;UAChCH,IAAI,EAAEA,IAAI,CAACO,UAAU;UACrBF,WAAW,EAAE,mBAAmB;UAChCC,eAAe,EAAE;QACnB,CAAC;MAEL,CAAC,CAAC;MACFR,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC;IAEDC,OAAO,CAAC,CAAC;EACX,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAA2B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACnCf,OAAO,gBACNL,OAAA;MAAAgB,QAAA,EAAG;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAE5BpB,OAAA;MAAKqB,KAAK,EAAE;QAAEC,QAAQ,EAAE;MAAQ,CAAE;MAAAN,QAAA,EAC/Bb,SAAS,iBAAIH,OAAA,CAACF,WAAW;QAACU,IAAI,EAAEL;MAAU;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAClB,EAAA,CA5CID,aAAa;AAAAsB,EAAA,GAAbtB,aAAa;AA8CnB,eAAeA,aAAa;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}