{"ast":null,"code":"var _jsxFileName = \"/home/nihal/Documents/COLLEGE_STUFF/EDAI-IT/SolarSense/green-it-solar-map/client/src/pages/BipvToolPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { predictEnergy } from '../services/api';\nimport Button from '../components/ui/Button';\nimport Input from '../components/ui/Input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BipvToolPage = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    lat: 40.7128,\n    lng: -74.0060,\n    area_sq_ft: 1000,\n    panel_efficiency: 0.2\n  });\n  const [prediction, setPrediction] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: parseFloat(e.target.value)\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n    setPrediction(null);\n    try {\n      const response = await predictEnergy(formData);\n      setPrediction(response.data);\n    } catch (err) {\n      setError('Failed to get prediction. Please check the server.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"BIPV Management & Prediction Tool\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        label: \"Latitude\",\n        type: \"number\",\n        name: \"lat\",\n        value: formData.lat,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        label: \"Longitude\",\n        type: \"number\",\n        name: \"lng\",\n        value: formData.lng,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        label: \"Building Area (sq ft)\",\n        type: \"number\",\n        name: \"area_sq_ft\",\n        value: formData.area_sq_ft,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        label: \"Panel Efficiency (e.g., 0.2 for 20%)\",\n        type: \"number\",\n        name: \"panel_efficiency\",\n        step: \"0.01\",\n        value: formData.panel_efficiency,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        disabled: loading,\n        children: loading ? 'Calculating...' : 'Predict Energy Generation'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this), prediction && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Prediction Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Predicted Energy (kWh/year):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 14\n        }, this), \" \", prediction.predicted_energy_kwh_per_year]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Carbon Reduction (tons CO2/year):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 14\n        }, this), \" \", prediction.carbon_reduction_tons]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(BipvToolPage, \"dOSUOTNxEGU1F7DuY4OLk3lXBjY=\");\n_c = BipvToolPage;\nexport default BipvToolPage;\nvar _c;\n$RefreshReg$(_c, \"BipvToolPage\");","map":{"version":3,"names":["React","useState","predictEnergy","Button","Input","jsxDEV","_jsxDEV","BipvToolPage","_s","formData","setFormData","lat","lng","area_sq_ft","panel_efficiency","prediction","setPrediction","loading","setLoading","error","setError","handleChange","e","target","name","parseFloat","value","handleSubmit","preventDefault","response","data","err","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","label","type","onChange","step","disabled","style","color","marginTop","predicted_energy_kwh_per_year","carbon_reduction_tons","_c","$RefreshReg$"],"sources":["/home/nihal/Documents/COLLEGE_STUFF/EDAI-IT/SolarSense/green-it-solar-map/client/src/pages/BipvToolPage.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { predictEnergy } from '../services/api';\nimport Button from '../components/ui/Button';\nimport Input from '../components/ui/Input';\n\nconst BipvToolPage = () => {\n  const [formData, setFormData] = useState({\n    lat: 40.7128,\n    lng: -74.0060,\n    area_sq_ft: 1000,\n    panel_efficiency: 0.2,\n  });\n  const [prediction, setPrediction] = useState<any>(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setFormData({ ...formData, [e.target.name]: parseFloat(e.target.value) });\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n    setPrediction(null);\n    try {\n      const response = await predictEnergy(formData);\n      setPrediction(response.data);\n    } catch (err) {\n      setError('Failed to get prediction. Please check the server.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div>\n      <h2>BIPV Management & Prediction Tool</h2>\n      <form onSubmit={handleSubmit}>\n        <Input label=\"Latitude\" type=\"number\" name=\"lat\" value={formData.lat} onChange={handleChange} />\n        <Input label=\"Longitude\" type=\"number\" name=\"lng\" value={formData.lng} onChange={handleChange} />\n        <Input label=\"Building Area (sq ft)\" type=\"number\" name=\"area_sq_ft\" value={formData.area_sq_ft} onChange={handleChange} />\n        <Input label=\"Panel Efficiency (e.g., 0.2 for 20%)\" type=\"number\" name=\"panel_efficiency\" step=\"0.01\" value={formData.panel_efficiency} onChange={handleChange} />\n        <Button type=\"submit\" disabled={loading}>\n          {loading ? 'Calculating...' : 'Predict Energy Generation'}\n        </Button>\n      </form>\n\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n\n      {prediction && (\n        <div style={{ marginTop: '20px' }}>\n          <h3>Prediction Results</h3>\n          <p><strong>Predicted Energy (kWh/year):</strong> {prediction.predicted_energy_kwh_per_year}</p>\n          <p><strong>Carbon Reduction (tons CO2/year):</strong> {prediction.carbon_reduction_tons}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default BipvToolPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}