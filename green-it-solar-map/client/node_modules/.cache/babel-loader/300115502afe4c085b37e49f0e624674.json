{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:5000/api'; // Adjust the base URL as needed\n\n// Function to predict energy generation\nexport const predictEnergy = async locationData => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/predict-energy`, locationData);\n    return response.data;\n  } catch (error) {\n    console.error('Error predicting energy:', error);\n    throw error;\n  }\n};\n\n// Function to get user data\nexport const getUserData = async userId => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/users/${userId}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching user data:', error);\n    throw error;\n  }\n};\n\n// Function to save user project\nexport const saveUserProject = async (userId, projectData) => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/users/${userId}/projects`, projectData);\n    return response.data;\n  } catch (error) {\n    console.error('Error saving user project:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","predictEnergy","locationData","response","post","data","error","console","getUserData","userId","get","saveUserProject","projectData"],"sources":["/home/nihal/Documents/COLLEGE_STUFF/EDAI-IT/SolarSense/green-it-solar-map/client/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = 'http://localhost:5000/api'; // Adjust the base URL as needed\n\n// Function to predict energy generation\nexport const predictEnergy = async (locationData) => {\n    try {\n        const response = await axios.post(`${API_BASE_URL}/predict-energy`, locationData);\n        return response.data;\n    } catch (error) {\n        console.error('Error predicting energy:', error);\n        throw error;\n    }\n};\n\n// Function to get user data\nexport const getUserData = async (userId) => {\n    try {\n        const response = await axios.get(`${API_BASE_URL}/users/${userId}`);\n        return response.data;\n    } catch (error) {\n        console.error('Error fetching user data:', error);\n        throw error;\n    }\n};\n\n// Function to save user project\nexport const saveUserProject = async (userId, projectData) => {\n    try {\n        const response = await axios.post(`${API_BASE_URL}/users/${userId}/projects`, projectData);\n        return response.data;\n    } catch (error) {\n        console.error('Error saving user project:', error);\n        throw error;\n    }\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,2BAA2B,CAAC,CAAC;;AAElD;AACA,OAAO,MAAMC,aAAa,GAAG,MAAOC,YAAY,IAAK;EACjD,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,GAAGJ,YAAY,iBAAiB,EAAEE,YAAY,CAAC;IACjF,OAAOC,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,MAAMA,KAAK;EACf;AACJ,CAAC;;AAED;AACA,OAAO,MAAME,WAAW,GAAG,MAAOC,MAAM,IAAK;EACzC,IAAI;IACA,MAAMN,QAAQ,GAAG,MAAMJ,KAAK,CAACW,GAAG,CAAC,GAAGV,YAAY,UAAUS,MAAM,EAAE,CAAC;IACnE,OAAON,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACjD,MAAMA,KAAK;EACf;AACJ,CAAC;;AAED;AACA,OAAO,MAAMK,eAAe,GAAG,MAAAA,CAAOF,MAAM,EAAEG,WAAW,KAAK;EAC1D,IAAI;IACA,MAAMT,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,GAAGJ,YAAY,UAAUS,MAAM,WAAW,EAAEG,WAAW,CAAC;IAC1F,OAAOT,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAClD,MAAMA,KAAK;EACf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}