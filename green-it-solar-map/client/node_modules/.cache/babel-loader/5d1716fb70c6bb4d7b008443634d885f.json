{"ast":null,"code":"var _jsxFileName = \"/home/nihal/Documents/COLLEGE_STUFF/EDAI-IT/SolarSense/green-it-solar-map/client/src/components/3d/EarthModel.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EarthModel = () => {\n  _s();\n  const mountRef = useRef(null);\n  useEffect(() => {\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    const renderer = new THREE.WebGLRenderer();\n    if (mountRef.current) {\n      renderer.setSize(window.innerWidth, window.innerHeight);\n      mountRef.current.appendChild(renderer.domElement);\n    }\n    const geometry = new THREE.SphereGeometry(5, 32, 32);\n    const material = new THREE.MeshBasicMaterial({\n      color: 0x0077ff,\n      wireframe: true\n    });\n    const earth = new THREE.Mesh(geometry, material);\n    scene.add(earth);\n    camera.position.z = 10;\n    const animate = () => {\n      requestAnimationFrame(animate);\n      earth.rotation.y += 0.01;\n      renderer.render(scene, camera);\n    };\n    animate();\n    return () => {\n      if (mountRef.current) {\n        mountRef.current.removeChild(renderer.domElement);\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mountRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 12\n  }, this);\n};\n_s(EarthModel, \"V9/qkEdV8GfsDZk7lMTA1T8g5Ps=\");\n_c = EarthModel;\nexport default EarthModel;\nvar _c;\n$RefreshReg$(_c, \"EarthModel\");","map":{"version":3,"names":["React","useEffect","useRef","THREE","jsxDEV","_jsxDEV","EarthModel","_s","mountRef","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","current","setSize","appendChild","domElement","geometry","SphereGeometry","material","MeshBasicMaterial","color","wireframe","earth","Mesh","add","position","z","animate","requestAnimationFrame","rotation","y","render","removeChild","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/nihal/Documents/COLLEGE_STUFF/EDAI-IT/SolarSense/green-it-solar-map/client/src/components/3d/EarthModel.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\n\nconst EarthModel: React.FC = () => {\n    const mountRef = useRef<HTMLDivElement | null>(null);\n\n    useEffect(() => {\n        const scene = new THREE.Scene();\n        const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n        const renderer = new THREE.WebGLRenderer();\n        \n        if (mountRef.current) {\n            renderer.setSize(window.innerWidth, window.innerHeight);\n            mountRef.current.appendChild(renderer.domElement);\n        }\n\n        const geometry = new THREE.SphereGeometry(5, 32, 32);\n        const material = new THREE.MeshBasicMaterial({ color: 0x0077ff, wireframe: true });\n        const earth = new THREE.Mesh(geometry, material);\n        scene.add(earth);\n\n        camera.position.z = 10;\n\n        const animate = () => {\n            requestAnimationFrame(animate);\n            earth.rotation.y += 0.01;\n            renderer.render(scene, camera);\n        };\n\n        animate();\n\n        return () => {\n            if (mountRef.current) {\n                mountRef.current.removeChild(renderer.domElement);\n            }\n        };\n    }, []);\n\n    return <div ref={mountRef} />;\n};\n\nexport default EarthModel;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,UAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAMC,QAAQ,GAAGN,MAAM,CAAwB,IAAI,CAAC;EAEpDD,SAAS,CAAC,MAAM;IACZ,MAAMQ,KAAK,GAAG,IAAIN,KAAK,CAACO,KAAK,CAAC,CAAC;IAC/B,MAAMC,MAAM,GAAG,IAAIR,KAAK,CAACS,iBAAiB,CAAC,EAAE,EAAEC,MAAM,CAACC,UAAU,GAAGD,MAAM,CAACE,WAAW,EAAE,GAAG,EAAE,IAAI,CAAC;IACjG,MAAMC,QAAQ,GAAG,IAAIb,KAAK,CAACc,aAAa,CAAC,CAAC;IAE1C,IAAIT,QAAQ,CAACU,OAAO,EAAE;MAClBF,QAAQ,CAACG,OAAO,CAACN,MAAM,CAACC,UAAU,EAAED,MAAM,CAACE,WAAW,CAAC;MACvDP,QAAQ,CAACU,OAAO,CAACE,WAAW,CAACJ,QAAQ,CAACK,UAAU,CAAC;IACrD;IAEA,MAAMC,QAAQ,GAAG,IAAInB,KAAK,CAACoB,cAAc,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;IACpD,MAAMC,QAAQ,GAAG,IAAIrB,KAAK,CAACsB,iBAAiB,CAAC;MAAEC,KAAK,EAAE,QAAQ;MAAEC,SAAS,EAAE;IAAK,CAAC,CAAC;IAClF,MAAMC,KAAK,GAAG,IAAIzB,KAAK,CAAC0B,IAAI,CAACP,QAAQ,EAAEE,QAAQ,CAAC;IAChDf,KAAK,CAACqB,GAAG,CAACF,KAAK,CAAC;IAEhBjB,MAAM,CAACoB,QAAQ,CAACC,CAAC,GAAG,EAAE;IAEtB,MAAMC,OAAO,GAAGA,CAAA,KAAM;MAClBC,qBAAqB,CAACD,OAAO,CAAC;MAC9BL,KAAK,CAACO,QAAQ,CAACC,CAAC,IAAI,IAAI;MACxBpB,QAAQ,CAACqB,MAAM,CAAC5B,KAAK,EAAEE,MAAM,CAAC;IAClC,CAAC;IAEDsB,OAAO,CAAC,CAAC;IAET,OAAO,MAAM;MACT,IAAIzB,QAAQ,CAACU,OAAO,EAAE;QAClBV,QAAQ,CAACU,OAAO,CAACoB,WAAW,CAACtB,QAAQ,CAACK,UAAU,CAAC;MACrD;IACJ,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOhB,OAAA;IAAKkC,GAAG,EAAE/B;EAAS;IAAAgC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACjC,CAAC;AAACpC,EAAA,CApCID,UAAoB;AAAAsC,EAAA,GAApBtC,UAAoB;AAsC1B,eAAeA,UAAU;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}