{"ast":null,"code":"var _jsxFileName = \"/home/nihal/Documents/COLLEGE_STUFF/EDAI-IT/SolarSense/green-it-solar-map/client/src/components/3d/EarthModel.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EarthModel = () => {\n  _s();\n  const mountRef = useRef(null);\n  useEffect(() => {\n    if (!mountRef.current) return;\n    const currentMount = mountRef.current;\n\n    // Scene\n    const scene = new THREE.Scene();\n\n    // Camera\n    const camera = new THREE.PerspectiveCamera(75, currentMount.clientWidth / currentMount.clientHeight, 0.1, 1000);\n    camera.position.z = 5;\n\n    // Renderer\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true,\n      alpha: true\n    });\n    renderer.setSize(currentMount.clientWidth, currentMount.clientHeight);\n    currentMount.appendChild(renderer.domElement);\n\n    // Sphere (Earth)\n    const geometry = new THREE.SphereGeometry(2, 32, 32);\n    const material = new THREE.MeshBasicMaterial({\n      color: 0x228B22,\n      wireframe: true\n    });\n    const sphere = new THREE.Mesh(geometry, material);\n    scene.add(sphere);\n\n    // Animation loop\n    const animate = () => {\n      requestAnimationFrame(animate);\n      sphere.rotation.y += 0.005;\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Handle resize\n    const handleResize = () => {\n      camera.aspect = currentMount.clientWidth / currentMount.clientHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(currentMount.clientWidth, currentMount.clientHeight);\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Cleanup\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      currentMount.removeChild(renderer.domElement);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mountRef,\n    style: {\n      width: '100%',\n      height: '400px',\n      background: '#f0f2f5'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 12\n  }, this);\n};\n_s(EarthModel, \"V9/qkEdV8GfsDZk7lMTA1T8g5Ps=\");\n_c = EarthModel;\nexport default EarthModel;\nvar _c;\n$RefreshReg$(_c, \"EarthModel\");","map":{"version":3,"names":["React","useEffect","useRef","THREE","jsxDEV","_jsxDEV","EarthModel","_s","mountRef","current","currentMount","scene","Scene","camera","PerspectiveCamera","clientWidth","clientHeight","position","z","renderer","WebGLRenderer","antialias","alpha","setSize","appendChild","domElement","geometry","SphereGeometry","material","MeshBasicMaterial","color","wireframe","sphere","Mesh","add","animate","requestAnimationFrame","rotation","y","render","handleResize","aspect","updateProjectionMatrix","window","addEventListener","removeEventListener","removeChild","ref","style","width","height","background","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/nihal/Documents/COLLEGE_STUFF/EDAI-IT/SolarSense/green-it-solar-map/client/src/components/3d/EarthModel.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\n\nconst EarthModel: React.FC = () => {\n    const mountRef = useRef<HTMLDivElement>(null);\n\n    useEffect(() => {\n        if (!mountRef.current) return;\n\n        const currentMount = mountRef.current;\n\n        // Scene\n        const scene = new THREE.Scene();\n\n        // Camera\n        const camera = new THREE.PerspectiveCamera(75, currentMount.clientWidth / currentMount.clientHeight, 0.1, 1000);\n        camera.position.z = 5;\n\n        // Renderer\n        const renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });\n        renderer.setSize(currentMount.clientWidth, currentMount.clientHeight);\n        currentMount.appendChild(renderer.domElement);\n\n        // Sphere (Earth)\n        const geometry = new THREE.SphereGeometry(2, 32, 32);\n        const material = new THREE.MeshBasicMaterial({ color: 0x228B22, wireframe: true });\n        const sphere = new THREE.Mesh(geometry, material);\n        scene.add(sphere);\n\n        // Animation loop\n        const animate = () => {\n            requestAnimationFrame(animate);\n            sphere.rotation.y += 0.005;\n            renderer.render(scene, camera);\n        };\n        animate();\n\n        // Handle resize\n        const handleResize = () => {\n            camera.aspect = currentMount.clientWidth / currentMount.clientHeight;\n            camera.updateProjectionMatrix();\n            renderer.setSize(currentMount.clientWidth, currentMount.clientHeight);\n        };\n        window.addEventListener('resize', handleResize);\n\n        // Cleanup\n        return () => {\n            window.removeEventListener('resize', handleResize);\n            currentMount.removeChild(renderer.domElement);\n        };\n    }, []);\n\n    return <div ref={mountRef} style={{ width: '100%', height: '400px', background: '#f0f2f5' }} />;\n};\n\nexport default EarthModel;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}