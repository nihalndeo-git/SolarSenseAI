{"ast":null,"code":"var _jsxFileName = \"/home/nihal/Documents/COLLEGE_STUFF/EDAI-IT/SolarSense/green-it-solar-map/client/src/pages/HomePage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { gsap } from 'gsap';\n\n// --- Shaders for the atmospheric glow ---\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst vertexShader = `\n  varying vec3 vertexNormal;\n  void main() {\n    vertexNormal = normalize(normalMatrix * normal);\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n  }\n`;\nconst fragmentShader = `\n  varying vec3 vertexNormal;\n  void main() {\n    float intensity = pow(0.6 - dot(vertexNormal, vec3(0, 0, 1.0)), 2.0);\n    gl_FragColor = vec4(0.3, 0.6, 1.0, 1.0) * intensity;\n  }\n`;\n// -----------------------------------------\n\n// Define an interface for our coordinates\n\nconst HomePage = () => {\n  _s();\n  const [target, setTarget] = useState(null);\n  const mountRef = useRef(null);\n  const handleFlyTo = () => {\n    setTarget({\n      lat: 18.4582,\n      lng: 73.8507\n    }); // VIT Pune coordinates\n  };\n  useEffect(() => {\n    if (!mountRef.current) return;\n    const currentMount = mountRef.current;\n\n    // Scene, Camera, Renderer\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, currentMount.clientWidth / currentMount.clientHeight, 0.1, 1000);\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setSize(currentMount.clientWidth, currentMount.clientHeight);\n    renderer.setPixelRatio(window.devicePixelRatio);\n    currentMount.appendChild(renderer.domElement);\n\n    // Controls\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true;\n    controls.dampingFactor = 0.05;\n\n    // Earth Sphere\n    const textureLoader = new THREE.TextureLoader();\n    const earthGeometry = new THREE.SphereGeometry(2, 64, 64);\n    const earthMaterial = new THREE.MeshStandardMaterial({\n      map: textureLoader.load('https://unpkg.com/three-globe/example/img/earth-day.jpg') // <-- RELIABLE TEXTURE URL\n    });\n    const earth = new THREE.Mesh(earthGeometry, earthMaterial);\n    scene.add(earth);\n\n    // Atmosphere Sphere\n    const atmosphereGeometry = new THREE.SphereGeometry(2, 64, 64);\n    const atmosphereMaterial = new THREE.ShaderMaterial({\n      vertexShader,\n      fragmentShader,\n      blending: THREE.AdditiveBlending,\n      side: THREE.BackSide\n    });\n    const atmosphere = new THREE.Mesh(atmosphereGeometry, atmosphereMaterial);\n    atmosphere.scale.set(1.1, 1.1, 1.1);\n    scene.add(atmosphere);\n\n    // Lighting\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.5);\n    scene.add(ambientLight);\n    camera.position.z = 5;\n\n    // Fly-to Animation Logic\n    if (target) {\n      const {\n        lat,\n        lng\n      } = target;\n      const radius = 2;\n      const phi = (90 - lat) * (Math.PI / 180);\n      const theta = (lng + 180) * (Math.PI / 180);\n      const targetPosition = new THREE.Vector3(-radius * Math.sin(phi) * Math.cos(theta), radius * Math.cos(phi), radius * Math.sin(phi) * Math.sin(theta));\n      gsap.to(camera.position, {\n        duration: 2.5,\n        x: targetPosition.x * 2.2,\n        // Zoom closer\n        y: targetPosition.y * 2.2,\n        z: targetPosition.z * 2.2,\n        onUpdate: () => camera.lookAt(earth.position)\n      });\n    }\n\n    // Animation Loop\n    const animate = () => {\n      requestAnimationFrame(animate);\n      controls.update();\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Handle Resize\n    const handleResize = () => {\n      camera.aspect = currentMount.clientWidth / currentMount.clientHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(currentMount.clientWidth, currentMount.clientHeight);\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Cleanup\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      if (currentMount) {\n        currentMount.removeChild(renderer.domElement);\n      }\n    };\n  }, [target]);\n  const containerStyle = {\n    width: '100%',\n    height: '90vh',\n    backgroundColor: '#000'\n  };\n  const uiContainerStyle = {\n    position: 'absolute',\n    top: '80px',\n    // Adjusted to not overlap header\n    left: '20px',\n    zIndex: 10,\n    background: 'rgba(255, 255, 255, 0.8)',\n    padding: '10px',\n    borderRadius: '5px'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: containerStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: uiContainerStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"e.g., VIT Pune\",\n        style: {\n          marginRight: '10px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleFlyTo,\n        children: \"Fly to Location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mountRef,\n      style: {\n        width: '100%',\n        height: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"6Wu1q+a0sVXdSPpXRRWe47i8CJA=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useEffect","useRef","useState","THREE","OrbitControls","gsap","jsxDEV","_jsxDEV","vertexShader","fragmentShader","HomePage","_s","target","setTarget","mountRef","handleFlyTo","lat","lng","current","currentMount","scene","Scene","camera","PerspectiveCamera","clientWidth","clientHeight","renderer","WebGLRenderer","antialias","setSize","setPixelRatio","window","devicePixelRatio","appendChild","domElement","controls","enableDamping","dampingFactor","textureLoader","TextureLoader","earthGeometry","SphereGeometry","earthMaterial","MeshStandardMaterial","map","load","earth","Mesh","add","atmosphereGeometry","atmosphereMaterial","ShaderMaterial","blending","AdditiveBlending","side","BackSide","atmosphere","scale","set","ambientLight","AmbientLight","position","z","radius","phi","Math","PI","theta","targetPosition","Vector3","sin","cos","to","duration","x","y","onUpdate","lookAt","animate","requestAnimationFrame","update","render","handleResize","aspect","updateProjectionMatrix","addEventListener","removeEventListener","removeChild","containerStyle","width","height","backgroundColor","uiContainerStyle","top","left","zIndex","background","padding","borderRadius","style","children","type","placeholder","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ref","_c","$RefreshReg$"],"sources":["/home/nihal/Documents/COLLEGE_STUFF/EDAI-IT/SolarSense/green-it-solar-map/client/src/pages/HomePage.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { gsap } from 'gsap';\n\n// --- Shaders for the atmospheric glow ---\nconst vertexShader = `\n  varying vec3 vertexNormal;\n  void main() {\n    vertexNormal = normalize(normalMatrix * normal);\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n  }\n`;\n\nconst fragmentShader = `\n  varying vec3 vertexNormal;\n  void main() {\n    float intensity = pow(0.6 - dot(vertexNormal, vec3(0, 0, 1.0)), 2.0);\n    gl_FragColor = vec4(0.3, 0.6, 1.0, 1.0) * intensity;\n  }\n`;\n// -----------------------------------------\n\n// Define an interface for our coordinates\ninterface Coordinates {\n  lat: number;\n  lng: number;\n}\n\nconst HomePage = () => {\n  const [target, setTarget] = useState<Coordinates | null>(null);\n  const mountRef = useRef<HTMLDivElement>(null);\n\n  const handleFlyTo = () => {\n    setTarget({ lat: 18.4582, lng: 73.8507 }); // VIT Pune coordinates\n  };\n\n  useEffect(() => {\n    if (!mountRef.current) return;\n    const currentMount = mountRef.current;\n\n    // Scene, Camera, Renderer\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, currentMount.clientWidth / currentMount.clientHeight, 0.1, 1000);\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\n    renderer.setSize(currentMount.clientWidth, currentMount.clientHeight);\n    renderer.setPixelRatio(window.devicePixelRatio);\n    currentMount.appendChild(renderer.domElement);\n\n    // Controls\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true;\n    controls.dampingFactor = 0.05;\n\n    // Earth Sphere\n    const textureLoader = new THREE.TextureLoader();\n    const earthGeometry = new THREE.SphereGeometry(2, 64, 64);\n    const earthMaterial = new THREE.MeshStandardMaterial({\n      map: textureLoader.load('https://unpkg.com/three-globe/example/img/earth-day.jpg'), // <-- RELIABLE TEXTURE URL\n    });\n    const earth = new THREE.Mesh(earthGeometry, earthMaterial);\n    scene.add(earth);\n\n    // Atmosphere Sphere\n    const atmosphereGeometry = new THREE.SphereGeometry(2, 64, 64);\n    const atmosphereMaterial = new THREE.ShaderMaterial({\n      vertexShader,\n      fragmentShader,\n      blending: THREE.AdditiveBlending,\n      side: THREE.BackSide,\n    });\n    const atmosphere = new THREE.Mesh(atmosphereGeometry, atmosphereMaterial);\n    atmosphere.scale.set(1.1, 1.1, 1.1);\n    scene.add(atmosphere);\n\n    // Lighting\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.5);\n    scene.add(ambientLight);\n    camera.position.z = 5;\n\n    // Fly-to Animation Logic\n    if (target) {\n      const { lat, lng } = target;\n      const radius = 2;\n      const phi = (90 - lat) * (Math.PI / 180);\n      const theta = (lng + 180) * (Math.PI / 180);\n      const targetPosition = new THREE.Vector3(\n        -radius * Math.sin(phi) * Math.cos(theta),\n        radius * Math.cos(phi),\n        radius * Math.sin(phi) * Math.sin(theta)\n      );\n\n      gsap.to(camera.position, {\n        duration: 2.5,\n        x: targetPosition.x * 2.2, // Zoom closer\n        y: targetPosition.y * 2.2,\n        z: targetPosition.z * 2.2,\n        onUpdate: () => camera.lookAt(earth.position),\n      });\n    }\n\n    // Animation Loop\n    const animate = () => {\n      requestAnimationFrame(animate);\n      controls.update();\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Handle Resize\n    const handleResize = () => {\n      camera.aspect = currentMount.clientWidth / currentMount.clientHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(currentMount.clientWidth, currentMount.clientHeight);\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Cleanup\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      if (currentMount) {\n        currentMount.removeChild(renderer.domElement);\n      }\n    };\n  }, [target]);\n\n  const containerStyle: React.CSSProperties = {\n    width: '100%',\n    height: '90vh',\n    backgroundColor: '#000',\n  };\n\n  const uiContainerStyle: React.CSSProperties = {\n    position: 'absolute',\n    top: '80px', // Adjusted to not overlap header\n    left: '20px',\n    zIndex: 10,\n    background: 'rgba(255, 255, 255, 0.8)',\n    padding: '10px',\n    borderRadius: '5px',\n  };\n\n  return (\n    <div style={containerStyle}>\n      <div style={uiContainerStyle}>\n        <input type=\"text\" placeholder=\"e.g., VIT Pune\" style={{ marginRight: '10px' }} />\n        <button onClick={handleFlyTo}>Fly to Location</button>\n      </div>\n      <div ref={mountRef} style={{ width: '100%', height: '100%' }} />\n    </div>\n  );\n};\n\nexport default HomePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}